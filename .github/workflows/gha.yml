name: GHAction

on:
  workflow_dispatch:
  push:
    tags:
    - 'v*'

jobs:
  ci_step:
    name: Build, tag and push Docker image to DockerHub and GHCR
    runs-on: ubuntu-latest

    steps:
      - name: Check out the source_repo
        uses: actions/checkout@v4

      - name: Docker metadata definitions
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/zad2
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}

      - name: QEMU set-up
        uses: docker/setup-qemu-action@v3

      - name: Buildx set-up
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/zad2t:cacheTest
          cache-to: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/zad2:cacheTest
          tags: ${{ steps.meta.outputs.tags }}Test

      - name: Install Docker Scout
        run: |
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh

      - name: Scan Docker image for vulnerabilities using Docker Scout
        id: scout
        run: |
          docker scout cves ${{ steps.meta.outputs.tags }}Test --output json | tee scout_report.json
          jq '.vulnerabilities | .[] | select(.severity == "HIGH" or .severity == "CRITICAL")' scout_report.json > high_critical_vulns.json
          if [ -s high_critical_vulns.json ]; then
            echo "High or critical vulnerabilities found"
            exit 1
          fi
      
      - name: Push Docker image to DockerHub
        if: success()  # Only run if the previous step was successful
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/zad2:cache
          cache-to: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/zad2:cache
          tags: ${{ steps.meta.outputs.tags }}

      - name: Login to GitHub Container Registry
        if: success()  # Only run if the previous step was successful
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image to GitHub Container Registry
        if: success()  # Only run if the previous step was successful
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/zad2:cache
          cache-to: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/zad2:cache
          tags: ${{ steps.meta.outputs.tags }}
          
      - name: Delete image
        run: |
          docker image rmi ${{ steps.meta.outputs.tags }}Test ${{ vars.DOCKERHUB_USERNAME }}/zad2t:cacheTest

